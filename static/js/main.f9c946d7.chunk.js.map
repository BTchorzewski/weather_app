{"version":3,"sources":["components/Search.js","components/Paragraph.js","components/City.js","components/Settings.js","components/Temperature.js","components/Description.js","components/Pressure.js","components/Humidity.js","components/Icon.js","components/Display.js","App.js","index.js"],"names":["Form","styled","form","_templateObject","I","i","_templateObject2","Input","input","_templateObject3","Button","button","_templateObject4","Search","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","onSubmit","search","changed","onClick","handleCoords","className","type","ref","inputRef","onChange","handleInput","value","placeholder","Component","Paragraph","p","Paragraph_templateObject","City","components_Paragraph","city","Wrapper","div","Settings_templateObject","Settings","changedUnit","units","Temperature_templateObject","Fahrenheit","Fragment","Math","floor","children","Celsius","Temperature","Temperature_Wrapper","Temperature_Fahrenheit","temp","Temperature_Celsius","Align","Description_templateObject","Description","text","Pressure","pressure","Humidity","humidity","Image","img","Icon_templateObject","Icon","icon","src","concat","alt","Display_templateObject","Subwrapper","Display_templateObject2","Display","Display_Wrapper","components_Temperature","weather","components_Settings","components_City","name","components_Pressure","components_Humidity","components_Icon","components_Description","description","defaultProps","App_templateObject","App","_this","handleChangedCity","event","preventDefault","setState","inputCity","state","coord","lon","lat","main","temp_max","temp_min","sunrise","sunset","React","createRef","fetchCoords","bind","assertThisInitialized","cleanInput","prevProps","prevState","console","log","fetchWeatherCoords","fetchWeatherCity","_this2","axios","get","process","then","response","setWeather","data","_this3","target","_this4","navigator","geolocation","getCurrentPosition","position","setCoords","param","coords","longitude","latitude","_response$main","_response$weather$","slicedToArray","_this5","App_Wrapper","components_Display","components_Search","el","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f9c946d7.chunk.js","sourcesContent":["import React ,{ Component } from 'react';\nimport styled from 'styled-components';\nimport '../linea_icon/styles.css';\nconst Form = styled.form`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    padding: 2rem 0;\n    font-size: 1.8rem;\n    color: rgb(133, 135, 140);\n    width: 60%;\n    @media only screen and (max-width: 37.5em) {\n        width: 95%;\n    }\n    \n`\nconst I = styled.i`\n    position: absolute;\n    z-index: 2;\n    top: 2.5rem;\n    left: .5rem;\n    color: rgb(133, 135, 140);\n    font-size: 1.8rem;\n    transition: all .3s;\n    \n    &:hover {\n        transform: scale(1.2)\n    }\n`\nconst Input = styled.input`\n    background-color: rgb(235, 237, 244);\n    border: none;\n    margin-bottom: 1rem;\n    padding: .5rem 0 .5rem 2.5rem;\n    border-radius: .3rem;\n    &:placeholder-shown {\n        padding-left: 3rem;\n    }\n`\nconst Button = styled.button`\n    color: inherit;\n    font-size: 1.8rem;\n    background-color: rgb(235, 237, 244);\n    border: none;\n    border-radius: .3rem;\n    padding: .5rem;\n    transition: all .2s;\n    \n    &:hover {\n        transform: translateY(-0.5rem);\n        box-shadow: 0 .5rem 2rem rgba(#000, .2);\n        \n    }\n`\n\n\nclass Search extends Component {\n    // eslint-disable-next-line\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Form onSubmit={this.props.search.changed}>\n                <I onClick={this.props.search.handleCoords} className='icon-basic-geolocalize-01' />\n                <Input type='text' ref={this.props.search.inputRef} onChange={this.props.search.handleInput} value={this.props.search.input} placeholder=\"Write your city\"/>\n                <Button type=\"submit\">Search</Button>\n            </Form>\n        )\n    }\n}\n\nexport default Search;","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n    font-size: 1.6rem;\n    margin-bottom: 2rem;\n`;\n\nexport default Paragraph;","import React from 'react';\n\nimport Paragraph from './Paragraph';\n\n\nconst City = (props) => {\n    return (\n        <Paragraph>Localization: {props.city}</Paragraph>\n    )\n}\n\n\nexport default City;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    font-size: 3rem;\n    transform: translate(1rem,-1.5rem);\n`;\n\n\n\nconst Settings = (props) => {\n\n    return (\n\n        <Wrapper onClick={props.changedUnit}>\n        {\n            props.units ? <p>&deg;F |&deg;C</p> : <p>&deg;C |&deg;F</p>\n        }\n        \n        </Wrapper>\n    )    \n}\n\nexport default Settings;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    font-size: 3rem;\n    \n`;\n\nconst Fahrenheit = (props) =>  {\n    return (\n        <React.Fragment>\n            <h1>{ (Math.floor(props.children * 1.8) + 32) }</h1>\n        </React.Fragment>\n    )\n}\n\nconst Celsius = (props) =>  {\n    return (\n        <React.Fragment>\n            <h1>{Math.floor(props.children)}</h1>\n        </React.Fragment>\n    )\n}\n\n\nconst Temperature = (props) => {\n    return (\n        <Wrapper>\n            {\n                props.units ? <Fahrenheit>{props.temp}</Fahrenheit> : <Celsius>{props.temp}</Celsius>\n            }\n            \n            \n        </Wrapper>\n    )\n}\n\n\nexport default Temperature;","import React from 'react';\nimport Paragraph from './Paragraph';\nimport styled from 'styled-components';\n\nconst Align = styled.div`\n    transform: translate(-35%,33%);\n`;\n\nconst Description = (props) => {\n    return (\n        <Align>\n            <Paragraph>{props.text}</Paragraph>\n        </Align>\n    )\n}\n\nexport default Description;","import React from 'react';\nimport Paragraph from './Paragraph';\n\nconst Pressure = (props) => {\n    return (\n        <Paragraph>Pressure: {props.pressure}hPa</Paragraph>\n    )\n}\n\nexport default Pressure;","import React from 'react'\nimport Paragraph from './Paragraph';\n\nconst Humidity = (props) => {\n    return (\n        <Paragraph>Humidity: {props.humidity}%</Paragraph>\n    )\n}\n\nexport default Humidity;\n","import React from 'react';\nimport styled from 'styled-components';\nconst Image = styled.img`\n    \n    height: 6rem;\n    margin-right: 2rem;\n   \n`;\n\nconst Icon = (props) => {\n    return (\n        props.icon ? <Image src={`http://openweathermap.org/img/w//${props.icon}.png`} alt='icon of weather'/> : <p>-</p>\n    )\n}\n\nexport default Icon;","import React from 'react';\nimport City from './City'\nimport Settings from './Settings';\nimport Temperature from './Temperature';\nimport Description from './Description';\nimport Pressure from './Pressure';\nimport Humidity from './Humidity'\nimport Icon from './Icon';\nimport styled from 'styled-components'\nconst Wrapper = styled.div`\n    background-color: rgb(235, 237, 244);\n    padding: 5rem 2rem;\n    border-radius: .3rem;\n    display: flex;\n    flex-direction: column;\n    align-items:center;\n    justify-content: space-around;\n    text-align: left;\n    width: 60%;\n    @media only screen and (max-width: 37.5em) {\n        width: 95%;\n    }\n`; \n\nconst Subwrapper = styled.div`\n    display: flex;\n    margin-bottom: 2rem;\n    position: relative;\n`;\n\nconst Display = (props) => {\n    return (\n        <Wrapper>\n        \n            \n            <Subwrapper>\n                <Temperature temp={props.weather.temp} units={props.units}/>\n                <Settings changedUnit={props.changedUnit} units={props.units}></Settings>\n            </Subwrapper>\n            <City city={props.weather.name}></City>\n            <Pressure pressure={props.weather.pressure}/>\n            <Humidity humidity={props.weather.humidity}/>\n            <Subwrapper>\n                <Icon icon={props.weather.icon}/>\n                <Description text={props.weather.description}/>\n            </Subwrapper>\n            \n        </Wrapper>\n    )\n}\n\n\n\nDisplay.defaultProps = {\n    weather: {\n        icon: '-',\n        temp: '-',\n        name: '-',\n        pressure: '-',\n        humidity: '-',\n        description: '-'\n    }\n}\n\nexport default Display;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Search from './components/Search';\nimport Display from './components/Display';\nimport '../src/index.css';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  \n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n  padding-top: 5rem;\n  margin: 0 auto;\n  background-image: linear-gradient(to right bottom, rgba(100, 214, 244, .4), rgb(80, 153, 196, .8) 50%);\n  color: rgb(146, 152, 153);\n  overflow: hidden;\n  @supports not (background-image: linear-gradient(to right bottom, rgba(100, 214, 244, .4), rgb(80, 153, 196, .8) 50%)) {\n    background-color: rgba(100, 214, 244, .4)\n  }\n  \n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      coord: {\n        lon: 0,\n        lat: 0\n      },\n      city: '',\n      input: '',\n      weather: {\n        main: '',\n        description: '',\n        temp: 0,\n        pressure: 0,\n        humidity: 0,\n        temp_max: 0,\n        temp_min: 0,\n        sunrise: 0,\n        sunset: 0,\n        name: ''\n      },\n      units: true \n    };\n    this.inputCity = React.createRef();\n    this.fetchCoords = this.fetchCoords.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.cleanInput = this.cleanInput.bind(this);\n    this.handleChangedCity =this.handleChangedCity.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCoords();\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.coord !== prevState.coord){\n      console.log('Coords updated');  \n      this.fetchWeatherCoords();\n      \n    }\n    if(this.state.city !== prevState.city){\n      console.log('City updated')\n      this.fetchWeatherCity();\n\n    }\n    if(this.state.city === '' && prevState.city !== '' && this.state.coord.lat !== 0 ) {\n      console.log('city is empty and coords are choosen')\n      this.fetchWeatherCoords();\n    }\n  }\n  \n\n\n  fetchWeatherCoords() {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.coord.lat}&lon=${this.state.coord.lon}&appid=${process.env.REACT_APP_WEATHER_API}&units=metric`)\n    .then(response => {\n      this.setWeather(response.data);\n    })\n      \n  }\n  \n  fetchWeatherCity() {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${process.env.REACT_APP_WEATHER_API}&units=metric`)\n    .then(response => {\n      this.setWeather(response.data);\n      \n    })\n\n  }\n  \n  handleInput(event) {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  cleanInput() {\n    this.setState({\n      input: \"\"\n    })\n  }\n\n  handleChangedCity = (event) => {\n    event.preventDefault();\n    this.setState({\n      city: this.inputCity.value\n    })\n    \n  }\n  \n  fetchCoords() {\n    navigator.geolocation.getCurrentPosition( position => {\n      this.setCoords(position);\n      this.cleanInput();\n    });\n  }\n  \n  setCoords(param) {\n    this.setState({\n      coord: {\n        lon: param.coords.longitude,\n        lat: param.coords.latitude\n      }\n    })\n  }\n\n  setWeather(response) {\n    // Destructuring object\n    const { \n      main: {\n        temp,\n        pressure,\n        humidity,\n        \n      },\n      name\n      } = response;\n    // Destructuring array\n    const [{description, icon}] = response.weather;\n    this.setState({\n      weather: {\n        temp,\n        pressure,\n        humidity,\n        name,\n        description,\n        icon\n      }\n    })\n  }\n\n  changedUnit() {\n    this.setState({\n      units: !this.state.units\n    })\n  }\n  render() {\n    return ( \n    <Wrapper>\n      <Display weather={this.state.weather} units={this.state.units} changedUnit={this.changedUnit.bind(this)}/>\n      <Search \n        search={\n          {\n            changed: this.handleChangedCity,\n            handleCoords: this.fetchCoords,\n            inputRef: (el) => {this.inputCity = el },\n            handleInput: this.handleInput,\n            input: this.state.input\n          }\n        }\n      />\n    </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}