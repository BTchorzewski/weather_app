{"version":3,"sources":["components/Search.js","components/City.js","components/Settings.js","components/Temperature.js","components/Description.js","components/Pressure.js","components/Humidity.js","components/Icon.js","components/Display.js","App.js","index.js"],"names":["Form","styled","form","_templateObject","Search","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","onSubmit","search","changed","onClick","handleCoords","className","type","ref","inputRef","onChange","handleInput","value","input","Component","Wrapper","h1","City_templateObject","City","city","div","Settings_templateObject","Settings","Settings_Wrapper","changedUnit","units","show","keyframes","Temperature_templateObject","_templateObject2","Fahrenheit","Fragment","Math","floor","children","Celsius","Temperature","Temperature_Wrapper","Temperature_Fahrenheit","temp","Temperature_Celsius","P","p","Description_templateObject","Description","text","Pressure","pressure","Humidity","humidity","Icon_templateObject","Icon","Icon_Wrapper","src","concat","icon","alt","Display_templateObject","Display","Display_Wrapper","components_Settings","components_Icon","weather","components_Description","description","components_Temperature","components_City","name","components_Pressure","components_Humidity","App_templateObject","App","_this","handleChangedCity","event","preventDefault","setState","inputCity","state","coord","lon","lat","main","temp_max","temp_min","sunrise","sunset","React","createRef","fetchCoords","bind","assertThisInitialized","cleanInput","prevProps","prevState","console","log","fetchWeatherCoords","fetchWeatherCity","_this2","axios","get","process","then","response","setWeather","data","_this3","target","_this4","navigator","geolocation","getCurrentPosition","position","setCoords","param","coords","longitude","latitude","_response$main","_response$sys","sys","_response$weather$","slicedToArray","_this5","App_Wrapper","components_Display","components_Search","el","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d54e0b85.chunk.js","sourcesContent":["import React ,{ Component } from 'react';\nimport styled from 'styled-components';\nimport '../linea_icon/styles.css';\nconst Form = styled.form`\n    width: 100%;\n    font-size: 1rem;\n    border-radius: .3rem;\n    margin-top: 1rem;\n    position: relative;\n    color: #fff;\n    & > input {\n        display: inline-block;\n        font-size: 2.2rem;\n        line-height: 5rem;\n        padding-left: 5rem;\n        margin-right: .5rem;\n        border-radius: .3rem;\n        border: none;\n        background-image: linear-gradient(90deg, rgb(125, 153, 196) 10%, rgb(195, 214, 244) 10%);\n        width: 78%;\n        float: left;\n        \n    }\n    & > input:focus, input:valid {\n        color: #fff;\n    }\n    & > i {\n        vertical-align: middle;\n        position: absolute;\n        top: .5rem;\n        left: 0;\n        z-index: 2;\n        height: 6rem;\n        font-size: 2.6rem;\n        padding: .5rem;\n        \n    }\n    & > button {\n        width: 20%;\n        margin-left: auto;\n        border: none;\n        float: right;\n        height: 5rem;\n        background-image: linear-gradient(to right bottom, rgb(195, 214, 244), rgb(125, 153, 196) 50%);\n        color: inherit;\n        border-radius: .3rem;\n    }\n`\n\nclass Search extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Form onSubmit={this.props.search.changed}>\n                <i onClick={this.props.search.handleCoords} className='icon-basic-geolocalize-01'></i>\n                <input type='text' ref={this.props.search.inputRef} onChange={this.props.search.handleInput} value={this.props.search.input}/>\n                <button type=\"submit\">Search</button>\n            </Form>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrapper = styled.h1`\n    font-size: 1.8rem;\n    \n`;\n\nconst City = (props) => {\n    return (\n        <Wrapper>{props.city}</Wrapper>\n    )\n}\n\n\nexport default City;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    display: inline-block;\n    position: absolute;\n    top: .5rem;\n    right: .5rem;\n    padding: .3rem .5rem;\n    background-color: #fff;\n    color: #000;\n    border-radius: 10rem;\n    text-align: center;\n`;\n\n\n\nconst Settings = (props) => {\n\n    return (\n\n        <Wrapper onClick={props.changedUnit}>\n        {\n            props.units ? <p>To Celsius</p> : <p>To Fahrenheit</p>\n        }\n        \n        </Wrapper>\n    )    \n}\n\nexport default Settings;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst show = keyframes`\n    from {\n        \n        transform: rotateX(-90deg);\n    }\n\n    to {\n        opacity: 1;\n        transform: rotateX(0);\n    }\n`;\n\nconst Wrapper = styled.div`\n    font-size: 4rem;\n    padding: .5rem 0 2rem;\n    perspective: 10rem;\n    & > h1 {\n        animation: ${show} 2s;\n    }\n\n`;\n\nconst Fahrenheit = (props) =>  {\n    return (\n        <React.Fragment>\n            <h1>{ (Math.floor(props.children * 1.8) + 32) }&deg;F</h1>\n        </React.Fragment>\n    )\n}\n\nconst Celsius = (props) =>  {\n    return (\n        <React.Fragment>\n            <h1>{Math.floor(props.children)} &deg;C</h1>\n        </React.Fragment>\n    )\n}\n\n\nconst Temperature = (props) => {\n    return (\n        <Wrapper>\n            {\n                props.units ? <Fahrenheit>{props.temp}</Fahrenheit> : <Celsius>{props.temp}</Celsius>\n            }\n            \n            \n        </Wrapper>\n    )\n}\n\n\nexport default Temperature;","import React from 'react';\nimport styled from 'styled-components';\nconst P = styled.p`\n    display: inline-block;\n    padding: 4rem 0;\n    margin-top: -7rem;\n`;\n\nconst Description = (props) => {\n    return (\n        <P>{props.text}</P>\n    )\n}\n\nexport default Description;","import React from 'react';\n\n\nconst Pressure = (props) => {\n    return (\n        <p>Pressure: {props.pressure}hPa</p>\n    )\n}\n\nexport default Pressure;","import React from 'react'\nconst Humidity = (props) => {\n    return (\n        <p>Humidity: {props.humidity}%</p>\n    )\n}\n\nexport default Humidity;\n","import React from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n     \n    & > img {\n        width: 18rem;\n    }\n    \n`;\n\nconst Icon = (props) => {\n    return (\n        <Wrapper>\n            <img src={`http://openweathermap.org/img/w//${props.icon}.png`} alt='icon of weather'/>\n        </Wrapper>\n        \n    )\n}\n\nexport default Icon;","import React from 'react';\nimport City from './City'\nimport Settings from './Settings';\nimport Temperature from './Temperature';\nimport Description from './Description';\nimport Pressure from './Pressure';\nimport Humidity from './Humidity'\nimport Icon from './Icon';\nimport styled from 'styled-components'\nconst Wrapper = styled.div`\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-image: linear-gradient(to right bottom, rgb(195, 214, 244), rgb(125, 153, 196) 50%);\n    padding-bottom: 1rem;\n    border-radius: .5rem;\n    padding: 2rem 3rem;\n    color: #fff;\n\n`; \n\nconst Display = (props) => {\n    return (\n        <Wrapper>\n            <Settings changedUnit={props.changedUnit} units={props.units}></Settings>\n            <Icon icon={props.weather.icon}/>\n            <Description text={props.weather.description}></Description>\n            <Temperature temp={props.weather.temp} units={props.units}/>\n            <City city={props.weather.name}></City>\n            <Pressure pressure={props.weather.pressure}/>\n            <Humidity humidity={props.weather.humidity}/>\n        </Wrapper>\n    )\n}\nexport default Display;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Search from './components/Search';\nimport Display from './components/Display';\nimport '../src/index.css';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n  width: 30%;\n  margin: 0 auto;\n\n  @media (max-width: 92rem) {\n    width: 35%;\n  }\n\n  @media (max-width: 72rem) {\n    width: 50%;\n  }\n\n  @media (max-width: 36rem) {\n    width: 80%;\n  }\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      coord: {\n        lon: 0,\n        lat: 0\n      },\n      city: '',\n      input: '',\n      weather: {\n        main: '',\n        description: '',\n        temp: 0,\n        pressure: 0,\n        humidity: 0,\n        temp_max: 0,\n        temp_min: 0,\n        sunrise: 0,\n        sunset: 0,\n        name: ''\n      },\n      units: true \n    };\n    this.inputCity = React.createRef();\n    this.fetchCoords = this.fetchCoords.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.cleanInput = this.cleanInput.bind(this);\n    this.handleChangedCity =this.handleChangedCity.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCoords();\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.coord !== prevState.coord){\n      console.log('Coords updated');  \n      this.fetchWeatherCoords();\n      \n    }\n    if(this.state.city !== prevState.city){\n      console.log('City updated')\n      this.fetchWeatherCity();\n\n    }\n    if(this.state.city === '' && prevState.city !== '' && this.state.coord.lat !== 0 ) {\n      console.log('city is empty and coords are choosen')\n      this.fetchWeatherCoords();\n    }\n  }\n  \n\n\n  fetchWeatherCoords() {\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${this.state.coord.lat}&lon=${this.state.coord.lon}&appid=${process.env.REACT_APP_WEATHER_API}&units=metric`)\n    .then(response => {\n      this.setWeather(response.data);\n    })\n      \n  }\n  \n  fetchWeatherCity() {\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${process.env.REACT_APP_WEATHER_API}&units=metric`)\n    .then(response => {\n      this.setWeather(response.data);\n      \n    })\n\n  }\n  \n  handleInput(event) {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  cleanInput() {\n    this.setState({\n      input: \"\"\n    })\n  }\n\n  handleChangedCity = (event) => {\n    event.preventDefault();\n    this.setState({\n      city: this.inputCity.value\n    })\n    \n  }\n  \n  fetchCoords() {\n    navigator.geolocation.getCurrentPosition( position => {\n      this.setCoords(position);\n      this.cleanInput();\n    });\n  }\n  \n  setCoords(param) {\n    this.setState({\n      coord: {\n        lon: param.coords.longitude,\n        lat: param.coords.latitude\n      }\n    })\n  }\n\n  setWeather(response) {\n    // Destructuring object\n    const { \n      main: {\n        temp,\n        pressure,\n        humidity,\n        temp_max,\n        temp_min,\n      },\n      name, \n      sys: { \n        sunrise,\n        sunset \n        }\n      } = response;\n    // Destructuring array\n    const [{main, description, icon}] = response.weather;\n    this.setState({\n      weather: {\n        temp,\n        pressure,\n        humidity,\n        name,\n        description,\n        icon\n      }\n    })\n  }\n\n  changedUnit() {\n    this.setState({\n      units: !this.state.units\n    })\n  }\n  render() {\n    return ( \n    <Wrapper>\n      \n      <Display weather={this.state.weather} units={this.state.units} changedUnit={this.changedUnit.bind(this)}/>\n      \n      <Search \n        search={\n          {\n            changed: this.handleChangedCity,\n            handleCoords: this.fetchCoords,\n            inputRef: (el) => {this.inputCity = el },\n            handleInput: this.handleInput,\n            input: this.state.input\n          }\n        }\n      />\n      \n    </Wrapper>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}