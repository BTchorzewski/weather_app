{"version":3,"sources":["components/Search.js","components/City.js","components/Settings.js","components/Temperature.js","components/Description.js","components/Pressure.js","components/Humidity.js","components/Icon.js","components/Display.js","App.js","index.js"],"names":["Form","styled","form","_templateObject","I","i","_templateObject2","Input","input","_templateObject3","Button","button","_templateObject4","Search","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","onSubmit","search","changed","onClick","handleCoords","className","type","ref","inputRef","onChange","handleInput","value","Component","Wrapper","h1","City_templateObject","City","city","div","Settings_templateObject","Settings","Settings_Wrapper","changedUnit","units","Temperature_templateObject","Fahrenheit","Fragment","Math","floor","children","Celsius","Temperature","Temperature_Wrapper","Temperature_Fahrenheit","temp","Temperature_Celsius","P","p","Description_templateObject","Description","text","Pressure","pressure","Humidity","humidity","Image","img","Icon_templateObject","Icon","src","concat","icon","alt","Display_templateObject","Wrapper2","Display_templateObject2","Display","Display_Wrapper","components_Icon","weather","components_Temperature","components_Settings","components_City","name","components_Pressure","components_Humidity","components_Description","description","defaultProps","App_templateObject","App","_this","handleChangedCity","event","preventDefault","setState","inputCity","state","coord","lon","lat","main","temp_max","temp_min","sunrise","sunset","React","createRef","fetchCoords","bind","assertThisInitialized","cleanInput","prevProps","prevState","console","log","fetchWeatherCoords","fetchWeatherCity","_this2","axios","get","process","then","response","setWeather","data","_this3","target","_this4","navigator","geolocation","getCurrentPosition","position","setCoords","param","coords","longitude","latitude","_response$main","_response$weather$","slicedToArray","_this5","App_Wrapper","components_Display","components_Search","el","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.03d85760.chunk.js","sourcesContent":["import React ,{ Component } from 'react';\nimport styled from 'styled-components';\nimport '../linea_icon/styles.css';\nconst Form = styled.form`\n    display: flex;\n    justify-content: space-between;\n    width: 32rem;\n    font-size: 1.8rem;\n    position: relative;\n    padding: 1rem 0;\n    color: rgb(146, 152, 153);\n`\nconst I = styled.i`\n    position: absolute;\n    z-index: 2;\n    top: 53%;\n    left: 2%;\n    transform: translateY(-42%);\n    color: #632916;\n`\nconst Input = styled.input`\n    line-height: 1.8;\n    padding-left: 11%;\n    margin-right: 1rem;\n    background-image: linear-gradient(90deg, rgba(252, 170, 27, 0.49) 10%, rgb(246, 252, 219) 15%);\n    border: none;\n    border-radius: 10rem;\n    width: 74%;\n`\nconst Button = styled.button`\n    color: rgb(146, 152, 153);\n    font-size: 80%;\n    background-image: linear-gradient(to right bottom, rgb(252, 252, 252), rgb(246, 252, 219));\n    border: none;\n    border-radius: 10rem;\n    padding: 0 .5rem;\n`\n\n\nclass Search extends Component {\n    // eslint-disable-next-line\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Form onSubmit={this.props.search.changed}>\n                <I onClick={this.props.search.handleCoords} className='icon-basic-geolocalize-01' />\n                <Input type='text' ref={this.props.search.inputRef} onChange={this.props.search.handleInput} value={this.props.search.input}/>\n                <Button type=\"submit\">Search</Button>\n            </Form>\n        )\n    }\n}\n\nexport default Search;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrapper = styled.h1`\n    font-size: 1.8rem;\n    font-weight: 400;\n`;\n\nconst City = (props) => {\n    return (\n        <Wrapper>{props.city}</Wrapper>\n    )\n}\n\n\nexport default City;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    font-size: 6rem;\n    transform: translateY(-25%);\n`;\n\n\n\nconst Settings = (props) => {\n\n    return (\n\n        <Wrapper onClick={props.changedUnit}>\n        {\n            props.units ? <p>&deg;C</p> : <p>&deg;F</p>\n        }\n        \n        </Wrapper>\n    )    \n}\n\nexport default Settings;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    font-size: 4rem;\n    \n`;\n\nconst Fahrenheit = (props) =>  {\n    return (\n        <React.Fragment>\n            <h1>{ (Math.floor(props.children * 1.8) + 32) }</h1>\n        </React.Fragment>\n    )\n}\n\nconst Celsius = (props) =>  {\n    return (\n        <React.Fragment>\n            <h1>{Math.floor(props.children)}</h1>\n        </React.Fragment>\n    )\n}\n\n\nconst Temperature = (props) => {\n    return (\n        <Wrapper>\n            {\n                props.units ? <Fahrenheit>{props.temp}</Fahrenheit> : <Celsius>{props.temp}</Celsius>\n            }\n            \n            \n        </Wrapper>\n    )\n}\n\n\nexport default Temperature;","import React from 'react';\nimport styled from 'styled-components';\nconst P = styled.p`\n    display: inline-block;\n\n`;\n\nconst Description = (props) => {\n    return (\n        <P>{props.text}</P>\n    )\n}\n\nexport default Description;","import React from 'react';\n\n\nconst Pressure = (props) => {\n    return (\n        <p>Pressure: {props.pressure}hPa</p>\n    )\n}\n\nexport default Pressure;","import React from 'react'\nconst Humidity = (props) => {\n    return (\n        <p>Humidity: {props.humidity}%</p>\n    )\n}\n\nexport default Humidity;\n","import React from 'react';\nimport styled from 'styled-components';\nconst Image = styled.img`\n    height: 12rem;\n    margin-right: 2rem;\n    position: absolute;\n    top: -20%;\n    left: -5%;\n`;\n\nconst Icon = (props) => {\n    return (\n        <Image src={`http://openweathermap.org/img/w//${props.icon}.png`} alt='icon of weather'/>\n    )\n}\n\nexport default Icon;","import React from 'react';\nimport City from './City'\nimport Settings from './Settings';\nimport Temperature from './Temperature';\nimport Description from './Description';\nimport Pressure from './Pressure';\nimport Humidity from './Humidity'\nimport Icon from './Icon';\nimport styled from 'styled-components'\nconst Wrapper = styled.div`\n    background-image: linear-gradient(to right bottom, rgb(252, 252, 252), rgb(246, 252, 219));\n    padding: 4rem;\n    border-radius: .3rem;\n    width: 32rem;\n`; \nconst Wrapper2 = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    height: 10rem;\n    width: 100%;\n    position: relative;\n`;\n\nconst Display = (props) => {\n    return (\n        <Wrapper>\n            <Wrapper2>\n                <Icon icon={props.weather.icon}/>\n                <Temperature temp={props.weather.temp} units={props.units}/>\n                <Settings changedUnit={props.changedUnit} units={props.units}></Settings>\n            </Wrapper2>\n            <City city={props.weather.name}></City>\n            <Pressure pressure={props.weather.pressure}/>\n            <Humidity humidity={props.weather.humidity}/>\n            <Description text={props.weather.description}></Description>\n        </Wrapper>\n    )\n}\n\n\n\nDisplay.defaultProps = {\n    weather: {\n        icon: '-',\n        temp: '-',\n        name: '-',\n        pressure: '-',\n        humidity: '-',\n        description: '-'\n    }\n}\n\nexport default Display;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Search from './components/Search';\nimport Display from './components/Display';\nimport '../src/index.css';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  & * {\n    box-sizing: border-box;\n  }\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n  min-width: 32rem;\n  padding-top: 5rem;\n  margin: 0 auto;\n  background-image: linear-gradient(to right bottom, rgba(100, 214, 244, .4), rgb(80, 153, 196, .8) 50%);\n  color: rgb(146, 152, 153);\n  overflow: hidden;\n  \n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      coord: {\n        lon: 0,\n        lat: 0\n      },\n      city: '',\n      input: '',\n      weather: {\n        main: '',\n        description: '',\n        temp: 0,\n        pressure: 0,\n        humidity: 0,\n        temp_max: 0,\n        temp_min: 0,\n        sunrise: 0,\n        sunset: 0,\n        name: ''\n      },\n      units: true \n    };\n    this.inputCity = React.createRef();\n    this.fetchCoords = this.fetchCoords.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.cleanInput = this.cleanInput.bind(this);\n    this.handleChangedCity =this.handleChangedCity.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCoords();\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if(this.state.coord !== prevState.coord){\n      console.log('Coords updated');  \n      this.fetchWeatherCoords();\n      \n    }\n    if(this.state.city !== prevState.city){\n      console.log('City updated')\n      this.fetchWeatherCity();\n\n    }\n    if(this.state.city === '' && prevState.city !== '' && this.state.coord.lat !== 0 ) {\n      console.log('city is empty and coords are choosen')\n      this.fetchWeatherCoords();\n    }\n  }\n  \n\n\n  fetchWeatherCoords() {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.coord.lat}&lon=${this.state.coord.lon}&appid=${process.env.REACT_APP_WEATHER_API}&units=metric`)\n    .then(response => {\n      this.setWeather(response.data);\n    })\n      \n  }\n  \n  fetchWeatherCity() {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${process.env.REACT_APP_WEATHER_API}&units=metric`)\n    .then(response => {\n      this.setWeather(response.data);\n      \n    })\n\n  }\n  \n  handleInput(event) {\n    this.setState({\n      input: event.target.value\n    })\n  }\n\n  cleanInput() {\n    this.setState({\n      input: \"\"\n    })\n  }\n\n  handleChangedCity = (event) => {\n    event.preventDefault();\n    this.setState({\n      city: this.inputCity.value\n    })\n    \n  }\n  \n  fetchCoords() {\n    navigator.geolocation.getCurrentPosition( position => {\n      this.setCoords(position);\n      this.cleanInput();\n    });\n  }\n  \n  setCoords(param) {\n    this.setState({\n      coord: {\n        lon: param.coords.longitude,\n        lat: param.coords.latitude\n      }\n    })\n  }\n\n  setWeather(response) {\n    // Destructuring object\n    const { \n      main: {\n        temp,\n        pressure,\n        humidity,\n        \n      },\n      name\n      } = response;\n    // Destructuring array\n    const [{description, icon}] = response.weather;\n    this.setState({\n      weather: {\n        temp,\n        pressure,\n        humidity,\n        name,\n        description,\n        icon\n      }\n    })\n  }\n\n  changedUnit() {\n    this.setState({\n      units: !this.state.units\n    })\n  }\n  render() {\n    return ( \n    <Wrapper>\n      <Display weather={this.state.weather} units={this.state.units} changedUnit={this.changedUnit.bind(this)}/>\n      <Search \n        search={\n          {\n            changed: this.handleChangedCity,\n            handleCoords: this.fetchCoords,\n            inputRef: (el) => {this.inputCity = el },\n            handleInput: this.handleInput,\n            input: this.state.input\n          }\n        }\n      />\n    </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}